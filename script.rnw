\documentclass{article}
\usepackage[utf8]{inputenc}

\begin{document}

\section{Introduction}
\label{sec:title}
Test

\subsection{Subtitle}
\label{ssec:subtitle}

Plain text.
<<List of packages that will be utilised in my application, eval=TRUE, echo=TRUE>>=
library(ggplot2)
library(ggmap)
library(maps)
library(mapdata)
library(maptools)
library(wordcloud)
library(tm)
library(RColorBrewer)
library(SnowballC)
library(wordcloud2)
library(Matrix)
library(tidytext)
library(magrittr)
@

<<Import dataset from csv file, eval=TRUE, echo=TRUE>>=
# Import csv file from the Assets folder
orig_df = read.csv("Assets/globalterrorismdb.csv")  # read csv file
# Once dataset has been imported and asigned, create a working copy that we can use in our application
my_df <- orig_df
# we will now use tha attach command to allow us to refrence features without having to state what table they are from in our script
attach(my_df)
@

<<Data Exploration, eval=TRUE,echo=FALSE>>=
# Start by seeinghow many rows and feature our dataset has by using dim
dim(my_df)
names(my_df)
@

<<>>=
qplot(my_df$iyear, geom="histogram", binwidth=0.5, main="Histogram of Recorded Terrorist Incidents", xlab="Year", ylab="Quantity")
@



<<Map of all known Terrorist attacks, eval=TRUE, echo=TRUE>>=
worldmapcords <- map_data("world")
worldmap<- ggplot() + geom_polygon(data = worldmapcords, aes(x=long, y = lat, group = group)) + 
  coord_fixed(1.3)
worldmap + 
  geom_point(data = my_df, aes(x = longitude, y = latitude), color = "red", size = 0.1)
points(longitude, latitude, col = "red", cex = .6)
@


<<>>=
buildCorpus <- function(someText){
  # build a corpus, and specify the source to be character vectors
  myCorpus <- Corpus(VectorSource(someText))
  # I had to add this line to make the code work
  # For windows, it may not be an issue
  myCorpus <- tm_map(myCorpus,
                              content_transformer(function(x) iconv(x, to='UTF-8',
                                    sub='byte')),mc.cores=1)
  myCorpus <- tm_map(myCorpus, content_transformer(tolower))
  # remove punctuation
  myCorpus <- tm_map(myCorpus, removePunctuation)
  # remove numbers
  myCorpus <- tm_map(myCorpus, removeNumbers)
  # remove URLs
  removeURL <- function(x){
    sub("http[[:alnum:]]*", "", x)
  }
  ### myCorpus <- tm_map(myCorpus, removeURL, lazy=TRUE)
  myCorpus <- tm_map(myCorpus, content_transformer(removeURL)) #??
  # add two extra stop words: 'available' and 'via'
  # myStopwords <- c(stopwords("english"), "RT","rt")
  # remove "RT from stopwords
  # myStopwords <- setdiff(myStopwords, c("RT","rt"))
  # remove stopwords from corpus
  myCorpus <- tm_map(myCorpus, function(x) removeWords(x, stopwords("english")))
  myCorpus <- tm_map(myCorpus, stripWhitespace)
  # Return the text corpus
  return(myCorpus)
}
@


<<>>=
my_df.full_summary <- my_df[!(is.na(my_df$summary) | my_df$summary==""), ]
@


<<Summary splitting>>=
spec = c(set.1 = .1, set.2 = .1, set.3 = .1, set.4 = .1, set.5 = .1, set.6 = .1, set.7 = .1, set.8 = .1, set.9 = .1, set.10 = .1)

g = sample(cut(
  seq(nrow(my_df.full_summary)), 
  nrow(my_df.full_summary)*cumsum(c(0,spec)),
  labels = names(spec)
))

summarySplits = split(my_df.full_summary, g)

@

<<>>=
test<-as.data.frame(summarySplits$set.1$summary)
my_df.corpus <- buildCorpus(test)
dtm <- TermDocumentMatrix(my_df.corpus)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
@


<<>>=
# figPath = system.file("Assets/bomb.png",package = "wordcloud2")
wordcloud2(d, figPath = "Assets/world.png", size = 1.5,color = "skyblue")
@


\subsection{Another subtitle}
\label{ssec:another_subtitle}

More plain text.

\end{document}